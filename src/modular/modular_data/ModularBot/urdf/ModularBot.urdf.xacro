<?xml version="1.0" ?>
<robot name="ModularBot" xmlns:xacro="http://ros.org/wiki/xacro">
   <gazebo>
      <plugin filename="libGazeboXBotPlugin.so" name="gazebo_xbot_plugin">
         <path_to_config_file>configs/ADVR_shared/ModularBot/configs/config_ModularBot.yaml</path_to_config_file>
      </plugin>
   </gazebo>
   <xacro:property name="size1" value="0.05"/>
   <xacro:property name="size2" value="0.055"/>
   <xacro:property name="size3" value="0.06"/>
   <xacro:property name="size_interface" value="0.045"/>
   <xacro:property name="len1" value="0.4"/>
   <xacro:property name="len2" value="0.6"/>
   <xacro:property name="len3" value="0.8"/>
   <xacro:property name="mass" value="0.5"/>
   <material name="blue">
      <color rgba="0 0 0.8 1"/>
   </material>
   <material name="black">
      <color rgba="0 0 0 1"/>
   </material>
   <material name="white">
      <color rgba="1 1 1 1"/>
   </material>
   <material name="grey">
      <color rgba="0.5 0.5 0.5 1"/>
   </material>
   <material name="red">
      <color rgba="1 0 0 1"/>
   </material>
   <material name="green">
      <color rgba="0 1 0 1"/>
   </material>
   <material name="yellow">
      <color rgba="1 1 0 1"/>
   </material>
   <material name="tree_green">
      <color rgba="0.13 0.54 0.13 1"/>
   </material>
   <xacro:macro name="default_inertial" params="mass">
      <inertial>
         <mass value="${mass}"/>
         <inertia ixx="1.0e-03" ixy="0.0" ixz="0.0" iyy="1.0e-03" iyz="0.0" izz="1.0e-03"/>
      </inertial>
   </xacro:macro>
   <link name="base_link"/>
   <xacro:macro name="add_table" params="type name father">
      <joint name="fixed_table" type="fixed">
         <axis rpy="0 0 0" xyz="0 0 1"/>
         <parent link="${father}"/>
         <child link="${name}"/>
         <origin rpy="0.0 -0.0 0.0" xyz="0.0 0.0 0.0"/>
      </joint>
      <link name="${name}">
         <visual>
            <origin rpy="0 0 0" xyz="0.3 0 -0.005"/>
            <geometry>
               <box size="0.6 0.6 0.01"/>
            </geometry>
            <material name="gray"/>
         </visual>
         <collision>
            <origin rpy="0 0 0" xyz="0.25 0 -0.005"/>
            <geometry>
               <box size="0.6 0.6 0.01"/>
            </geometry>
         </collision>
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 0.00"/>
            <mass value="0.5"/>
            <inertia ixx="0.0006" ixy="0.0" ixz="0.0" iyy="0.0006" iyz="0.0" izz="0.0006"/>
         </inertial>
      </link>
   </xacro:macro>
   <xacro:macro name="add_fixed_joint" params="type name father child x y z roll pitch yaw">
      <joint name="${name}" type="fixed">
         <axis rpy="0 0 0" xyz="0 0 1"/>
         <parent link="${father}"/>
         <child link="${child}"/>
         <origin rpy="${roll} ${pitch} ${yaw}" xyz="${x} ${y} ${z}"/>
      </joint>
   </xacro:macro>
   <xacro:macro name="add_master_cube" params="name filename type">
      <xacro:property name="module" value="${load_yaml(filename)}"/>
      <joint name="fixed" type="fixed">
         <parent link="base_link"/>
         <child link="${name}"/>
         <axis rpy="0 0 0" xyz="0 0 1"/>
         <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      </joint>
      <link name="${name}">
         <visual>
            <origin rpy="0 0 0" xyz="0 0 0.17"/>
            <geometry>
               <mesh filename="${module['visual']['mesh_body_1']}" scale="0.001 0.001 0.001"/>
            </geometry>
         </visual>
         <collision>
            <origin rpy="0 0 0" xyz="0 0 0.17"/>
            <geometry>
               <mesh filename="${module['visual']['mesh_collision_1']}" scale="0.001 0.001 0.001"/>
            </geometry>
         </collision>
         <xacro:default_inertial mass="2"/>
      </link>
   </xacro:macro>
   <xacro:macro name="add_connectors" params="name filename type">
      <xacro:property name="module" value="${load_yaml(filename)}"/>
      <xacro:if value="${'connector_1' in module['kinematics']}">
         <link name="${name}_con1">
            <visual>
               <origin rpy="0 0 0" xyz="0 0 0.05"/>
               <geometry>
                  <cylinder length="0.1" radius="${size_interface}"/>
               </geometry>
               <material name="green"/>
            </visual>
         </link>
         <joint name="${name}_fixed_1" type="fixed">
            <parent link="${name}"/>
            <child link="${name}_con1"/>
            <axis rpy="0 0 0" xyz="0 0 1"/>
            <origin rpy="${module['kinematics']['connector_1']['roll']} ${module['kinematics']['connector_1']['pitch']} ${module['kinematics']['connector_1']['yaw']}" xyz="${module['kinematics']['connector_1']['x']} ${module['kinematics']['connector_1']['y']} ${module['kinematics']['connector_1']['z']}"/>
         </joint>
      </xacro:if>
      <xacro:if value="${'connector_2' in module['kinematics']}">
         <link name="${name}_con2">
            <visual>
               <origin rpy="0 0 0" xyz="0 0 0.05"/>
               <geometry>
                  <cylinder length="0.1" radius="${size_interface}"/>
               </geometry>
               <material name="green"/>
            </visual>
         </link>
         <joint name="${name}_fixed_2" type="fixed">
            <parent link="${name}"/>
            <child link="${name}_con2"/>
            <axis rpy="0 0 0" xyz="0 0 1"/>
            <origin rpy="${module['kinematics']['connector_2']['roll']} ${module['kinematics']['connector_2']['pitch']} ${module['kinematics']['connector_2']['yaw']}" xyz="${module['kinematics']['connector_2']['x']} ${module['kinematics']['connector_2']['y']} ${module['kinematics']['connector_2']['z']}"/>
         </joint>
      </xacro:if>
      <xacro:if value="${'connector_3' in module['kinematics']}">
         <link name="${name}_con3">
            <visual>
               <origin rpy="0 0 0" xyz="0 0 0.05"/>
               <geometry>
                  <cylinder length="0.1" radius="${size_interface}"/>
               </geometry>
               <material name="green"/>
            </visual>
         </link>
         <joint name="${name}_fixed_3" type="fixed">
            <parent link="${name}"/>
            <child link="${name}_con3"/>
            <axis rpy="0 0 0" xyz="0 0 1"/>
            <origin rpy="${module['kinematics']['connector_3']['roll']} ${module['kinematics']['connector_3']['pitch']} ${module['kinematics']['connector_3']['yaw']}" xyz="${module['kinematics']['connector_3']['x']} ${module['kinematics']['connector_3']['y']} ${module['kinematics']['connector_3']['z']}"/>
         </joint>
      </xacro:if>
      <xacro:if value="${'connector_4' in module['kinematics']}">
         <link name="${name}_con4">
            <visual>
               <origin rpy="0 0 0" xyz="0 0 0.05"/>
               <geometry>
                  <cylinder length="0.1" radius="${size_interface}"/>
               </geometry>
               <material name="green"/>
            </visual>
         </link>
         <joint name="${name}_fixed_4" type="fixed">
            <parent link="${name}"/>
            <child link="${name}_con4"/>
            <axis rpy="0 0 0" xyz="0 0 1"/>
            <origin rpy="${module['kinematics']['connector_4']['roll']} ${module['kinematics']['connector_4']['pitch']} ${module['kinematics']['connector_4']['yaw']}" xyz="${module['kinematics']['connector_4']['x']} ${module['kinematics']['connector_4']['y']} ${module['kinematics']['connector_4']['z']}"/>
         </joint>
      </xacro:if>
   </xacro:macro>
   <xacro:macro name="add_slave_cube" params="name filename type">
      <xacro:property name="module" value="${load_yaml(filename)}"/>
      <link name="${name}">
         <visual>
            <origin rpy="0 0 0" xyz="0 0 0.17"/>
            <geometry>
               <mesh filename="${module['visual']['mesh_body_1']}" scale="0.001 0.001 0.001"/>
            </geometry>
         </visual>
         <collision>
            <geometry>
               <mesh filename="${module['visual']['mesh_body_1']}" scale="0.001 0.001 0.001"/>
            </geometry>
         </collision>
         <xacro:default_inertial mass="2.0"/>
      </link>
      <xacro:add_connectors filename="${filename}" name="${name}" type="${type}"/>
   </xacro:macro>
   <xacro:macro name="add_link" params="name type size_z size">
      <xacro:if value="${size==1}">
         <xacro:property name="radius" value="${size1}"/>
      </xacro:if>
      <xacro:unless value="${size==1}">
         <xacro:if value="${size==2}">
            <xacro:property name="radius" value="${size2}"/>
         </xacro:if>
         <xacro:unless value="${size==2}">
            <xacro:property name="radius" value="${size3}"/>
         </xacro:unless>
      </xacro:unless>
      <link name="${name}">
         <visual>
            <origin rpy="0 0 0" xyz="0 0 ${size_z/2}"/>
            <geometry>
               <cylinder length="${size_z}" radius="${radius}"/>
            </geometry>
            <material name="white"/>
         </visual>
         <collision>
            <origin rpy="0 0 0" xyz="0 0 ${size_z/2}"/>
            <geometry>
               <cylinder length="${size_z}" radius="${radius}"/>
            </geometry>
         </collision>
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 ${size_z/2}"/>
            <mass value="${mass}"/>
            <inertia ixx="${mass / 12.0 * (3*radius*radius + size_z*size_z)}" ixy="0.0" ixz="0.0" iyy="${mass / 12.0 * (size_z*size_z + 3*radius*radius)}" iyz="0.0" izz="${mass / 2.0 * (radius*radius)}"/>
         </inertial>
      </link>
      <gazebo reference="${name}">
         <mu1>0.2</mu1>
         <mu2>0.2</mu2>
         <kp>1000000.0</kp>
         <kd>1.0</kd>
         <maxVel>0.0</maxVel>
         <minDepth>0.0001</minDepth>
         <material>Gazebo/White</material>
      </gazebo>
   </xacro:macro>
   <xacro:macro name="add_size_adapter" params="type name size_z size_in size_out">
      <xacro:if value="${size_in==3}">
         <xacro:property name="radius1" value="${size3}"/>
      </xacro:if>
      <xacro:unless value="${size_in==3}">
         <xacro:if value="${size_in==2}">
            <xacro:property name="radius1" value="${size2}"/>
         </xacro:if>
         <xacro:unless value="${size_in==2}">
                
            </xacro:unless>
      </xacro:unless>
      <xacro:if value="${size_out==3}">
            
        </xacro:if>
      <xacro:unless value="${size_out==3}">
         <xacro:if value="${size_out==2}">
            <xacro:property name="radius2" value="${size2}"/>
         </xacro:if>
         <xacro:unless value="${size_out==2}">
            <xacro:property name="radius2" value="${size1}"/>
         </xacro:unless>
      </xacro:unless>
      <link name="${name}">
         <visual>
            <origin rpy="0 0 0" xyz="0 0 ${size_z/4}"/>
            <geometry>
               <cylinder length="${size_z/2}" radius="${radius1}"/>
            </geometry>
            <material name="grey"/>
         </visual>
         <visual>
            <origin rpy="0 0 0" xyz="0 0 ${3*size_z/4}"/>
            <geometry>
               <cylinder length="${size_z/2}" radius="${radius2}"/>
            </geometry>
            <material name="grey"/>
         </visual>
         <collision>
            <origin rpy="0 0 0" xyz="0 0 ${size_z/4}"/>
            <geometry>
               <cylinder length="${size_z/2}" radius="${radius1}"/>
            </geometry>
         </collision>
         <collision>
            <origin rpy="0 0 0" xyz="0 0 ${3*size_z/4}"/>
            <geometry>
               <cylinder length="${size_z/2}" radius="${radius2}"/>
            </geometry>
         </collision>
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 ${size_z/2}"/>
            <mass value="${mass}"/>
            <inertia ixx="${mass / 12.0 * (3*radius1*radius1 + 4*size_z/2*size_z/2) + mass / 12.0 * (3*radius2*radius2 + 4*size_z/2*size_z/2)}" ixy="0.0" ixz="0.0" iyy="${mass / 12.0 * (3*radius1*radius1 + 4*size_z/2*size_z/2) + mass / 12.0 * (3*radius2*radius2 + 4*size_z/2*size_z/2)}" iyz="0.0" izz="${mass / 4.0 * (radius1*radius1) + mass / 4.0 * (radius2*radius2)}"/>
         </inertial>
      </link>
      <gazebo reference="${name}">
         <mu1>0.2</mu1>
         <mu2>0.2</mu2>
         <kp>1000000.0</kp>
         <kd>1.0</kd>
         <maxVel>0.0</maxVel>
         <minDepth>0.0001</minDepth>
         <material>Gazebo/Grey</material>
      </gazebo>
   </xacro:macro>
   <xacro:macro name="add_elbow" params="type name size_y size_z size">
      <xacro:if value="${size==1}">
         <xacro:property name="radius" value="${size1}"/>
      </xacro:if>
      <xacro:unless value="${size==1}">
         <xacro:if value="${size==2}">
            <xacro:property name="radius" value="${size2}"/>
         </xacro:if>
         <xacro:unless value="${size==2}">
            <xacro:property name="radius" value="${size3}"/>
         </xacro:unless>
      </xacro:unless>
      <link name="${name}">
         <visual>
            <origin rpy="0 0 0" xyz="0 0 ${size_z/2}"/>
            <geometry>
               <cylinder length="${size_z}" radius="${radius}"/>
            </geometry>
            <material name="blue"/>
         </visual>
         <visual>
            <origin rpy="1.57 0 0" xyz="0 ${size_y/2} ${size_z}"/>
            <geometry>
               <cylinder length="${size_y}" radius="${radius}"/>
            </geometry>
            <material name="blue"/>
         </visual>
         <visual>
            <origin rpy="0 0 0" xyz="0 0 ${size_z}"/>
            <geometry>
               <sphere radius="${radius}"/>
            </geometry>
            <material name="blue"/>
         </visual>
         <collision>
            <origin rpy="0 0 0" xyz="0 0 ${size_z/2}"/>
            <geometry>
               <cylinder length="${size_z}" radius="${radius}"/>
            </geometry>
         </collision>
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 ${size_z/2}"/>
            <mass value="${mass}"/>
            <inertia ixx="${mass / 2 *( 1 / 12.0 * (3*radius*radius + 4*size_y*size_y) + size_z*size_z) + mass / 24.0 * (3*radius*radius + 4*size_z*size_z)}" ixy="0.0" ixz="0.0" iyy="${mass / 24.0 * (3*radius*radius + 4*size_z*size_z) + mass / 2 *( 1 / 2 *radius*radius + size_z*size_z)}" iyz="0.0" izz="${mass / 4.0 * (radius*radius) + mass / 24.0 * (3*radius*radius + 4*size_y*size_y)}"/>
         </inertial>
         <collision>
            <origin rpy="1.57 0 0" xyz="0 ${size_y/2} ${size_z}"/>
            <geometry>
               <cylinder length="${size_y}" radius="${radius}"/>
            </geometry>
         </collision>
         <collision>
            <origin rpy="0 0 0" xyz="0 0 ${size_z}"/>
            <geometry>
               <sphere radius="${radius}"/>
            </geometry>
         </collision>
      </link>
      <gazebo reference="${name}">
         <mu1>0.2</mu1>
         <mu2>0.2</mu2>
         <kp>1000000.0</kp>
         <kd>1.0</kd>
         <maxVel>0.0</maxVel>
         <minDepth>0.0001</minDepth>
         <material>Gazebo/White</material>
      </gazebo>
   </xacro:macro>
   <xacro:macro name="add_joint" params="type name father child x y z roll pitch yaw upper_lim lower_lim effort velocity">
      <joint name="${name}" type="revolute">
         <axis rpy="0 0 0" xyz="0 0 1"/>
         <parent link="${father}"/>
         <child link="${child}"/>
         <origin rpy="${roll} ${pitch} ${yaw}" xyz="${x} ${y} ${z}"/>
         <limit effort="${effort}" lower="${lower_lim}" upper="${upper_lim}" velocity="${velocity}"/>
      </joint>
   </xacro:macro>
   <xacro:macro name="add_rotor_fast" params="type name filename x y z roll pitch yaw">
      <xacro:property name="module" value="${load_yaml(filename)}"/>
      <xacro:property name="gear_ratio" value="${module['control']['nu']}"/>
      <link name="${name}">
         <inertial>
            <origin rpy="0 0 0" xyz="${module['dynamics']['body_2_fast']['CoM']['x']} ${module['dynamics']['body_2_fast']['CoM']['y']} ${module['dynamics']['body_2_fast']['CoM']['z']}"/>
            <mass value="${module['dynamics']['body_2_fast']['mass']}"/>
            <inertia ixx="${module['dynamics']['body_2_fast']['inertia_tensor']['I_xx']}" ixy="${module['dynamics']['body_2_fast']['inertia_tensor']['I_xy']}" ixz="${module['dynamics']['body_2_fast']['inertia_tensor']['I_xz'] }" iyy="${module['dynamics']['body_2_fast']['inertia_tensor']['I_yy']}" iyz="${module['dynamics']['body_2_fast']['inertia_tensor']['I_yz'] }" izz="${module['dynamics']['body_2_fast']['inertia_tensor']['I_zz'] }"/>
         </inertial>
      </link>
   </xacro:macro>
   <xacro:macro name="add_distal" params="type name filename">
      <xacro:property name="module" value="${load_yaml(filename)}"/>
      <xacro:property name="mesh_bool" value="false"/>
      <xacro:unless value="${ module['visual']['mesh_body_1'] == '' }">
         <xacro:property name="mesh_bool" value="true"/>
      </xacro:unless>
      <link name="${name}">
         <xacro:if value="${ mesh_bool }">
            <visual>
               <origin rpy="${module['visual']['tf_mesh_2']['roll']} ${module['visual']['tf_mesh_2']['pitch']} ${module['visual']['tf_mesh_2']['yaw']}" xyz="${module['visual']['tf_mesh_2']['x']} ${module['visual']['tf_mesh_2']['y']} ${module['visual']['tf_mesh_2']['z']}"/>
               <geometry>
                  <mesh filename="${module['visual']['mesh_body_2']}" scale="0.001 0.001 0.001"/>
               </geometry>
               <material name="tree_green"/>
            </visual>
            <collision>
               <origin rpy="${module['visual']['tf_mesh_2']['roll']} ${module['visual']['tf_mesh_2']['pitch']} ${module['visual']['tf_mesh_2']['yaw']}" xyz="${module['visual']['tf_mesh_2']['x']} ${module['visual']['tf_mesh_2']['y']} ${module['visual']['tf_mesh_2']['z']}"/>
               <geometry>
                  <mesh filename="${module['visual']['mesh_collision_2']}" scale="0.001 0.001 0.001"/>
               </geometry>
            </collision>
         </xacro:if>
         <inertial>
            <origin rpy="0 0 0" xyz="${module['dynamics']['body_2']['CoM']['x']} ${module['dynamics']['body_2']['CoM']['y']} ${module['dynamics']['body_2']['CoM']['z']}"/>
            <mass value="${module['dynamics']['body_2']['mass']}"/>
            <inertia ixx="${module['dynamics']['body_2']['inertia_tensor']['I_xx']}" ixy="${module['dynamics']['body_2']['inertia_tensor']['I_xy']}" ixz="${module['dynamics']['body_2']['inertia_tensor']['I_xz']}" iyy="${module['dynamics']['body_2']['inertia_tensor']['I_yy']}" iyz="${module['dynamics']['body_2']['inertia_tensor']['I_yz']}" izz="${module['dynamics']['body_2']['inertia_tensor']['I_zz']}"/>
         </inertial>
      </link>
   </xacro:macro>
   <xacro:macro name="add_tool_exchanger" params="type name filename">
      <xacro:property name="module" value="${load_yaml(filename)}"/>
      <xacro:property name="mesh_bool" value="false"/>
      <xacro:unless value="${ module['visual']['mesh_body_1'] == '' }">
         <xacro:property name="mesh_bool" value="true"/>
      </xacro:unless>
      <link name="${name}">
         <xacro:if value="${ mesh_bool }">
            <visual>
               <origin rpy="${module['visual']['tf_mesh_1']['roll']} ${module['visual']['tf_mesh_1']['pitch']} ${module['visual']['tf_mesh_1']['yaw']}" xyz="${module['visual']['tf_mesh_1']['x']} ${module['visual']['tf_mesh_1']['y']} ${module['visual']['tf_mesh_1']['z']}"/>
               <geometry>
                  <mesh filename="${module['visual']['mesh_body_1']}" scale="0.001 0.001 0.001"/>
               </geometry>
               <material name="tree_green"/>
            </visual>
            <collision>
               <origin rpy="${module['visual']['tf_mesh_1']['roll']} ${module['visual']['tf_mesh_1']['pitch']} ${module['visual']['tf_mesh_1']['yaw']}" xyz="${module['visual']['tf_mesh_1']['x']} ${module['visual']['tf_mesh_1']['y']} ${module['visual']['tf_mesh_1']['z']}"/>
               <geometry>
                  <mesh filename="${module['visual']['mesh_collision_1']}" scale="0.001 0.001 0.001"/>
               </geometry>
            </collision>
         </xacro:if>
         <inertial>
            <origin rpy="0 0 0" xyz="${module['dynamics']['body_1']['CoM']['x']} ${module['dynamics']['body_1']['CoM']['y']} ${module['dynamics']['body_1']['CoM']['z']}"/>
            <mass value="${module['dynamics']['body_1']['mass']}"/>
            <inertia ixx="${module['dynamics']['body_1']['inertia_tensor']['I_xx']}" ixy="${module['dynamics']['body_1']['inertia_tensor']['I_xy']}" ixz="${module['dynamics']['body_1']['inertia_tensor']['I_xz']}" iyy="${module['dynamics']['body_1']['inertia_tensor']['I_yy']}" iyz="${module['dynamics']['body_1']['inertia_tensor']['I_yz']}" izz="${module['dynamics']['body_1']['inertia_tensor']['I_zz']}"/>
         </inertial>
      </link>
   </xacro:macro>
   <xacro:macro name="add_pen" params="type name father">
      <link name="${name}"/>
      <joint name="fixed_${name}" type="fixed">
         <axis rpy="0 0 0" xyz="0 0 1"/>
         <parent link="${father}"/>
         <child link="${name}"/>
         <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.222"/>
      </joint>
   </xacro:macro>
   <xacro:macro name="add_simple_ee" params="type name size_z">
      <link name="${name}">
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 ${size_z/2}"/>
            <mass value="0.848"/>
            <inertia ixx="1.1564566e-03" ixy="0.0" ixz="0.0" iyy="1.2469918e-03" iyz="0.0" izz="5.7388903e-04"/>
         </inertial>
      </link>
   </xacro:macro>
   <xacro:macro name="add_joint_stator" params="type name filename size_y size_z size">
      <xacro:property name="module" value="${load_yaml(filename)}"/>
      <xacro:property name="mesh_bool" value="false"/>
      <xacro:unless value="${ module['visual']['mesh_body_1'] == '' }">
         <xacro:property name="mesh_bool" value="true"/>
      </xacro:unless>
      <xacro:if value="${size==1}">
         <xacro:property name="radius" value="${size1}"/>
      </xacro:if>
      <xacro:unless value="${size==1}">
         <xacro:if value="${size==2}">
            <xacro:property name="radius" value="${size2}"/>
         </xacro:if>
         <xacro:unless value="${size==2}">
            <xacro:property name="radius" value="${size3}"/>
         </xacro:unless>
      </xacro:unless>
      <xacro:if value="${mesh_bool==0}">
         <link name="${name}">
            <visual>
               <origin rpy="0 0 0" xyz="0 0 ${size_z/2}"/>
               <geometry>
                  <cylinder length="${size_z}" radius="${radius}"/>
               </geometry>
               <material name="blue"/>
            </visual>
            <collision>
               <origin rpy="0 0 0" xyz="0 0 ${size_z/2}"/>
               <geometry>
                  <cylinder length="${size_z}" radius="${radius}"/>
               </geometry>
            </collision>
            <inertial>
               <origin rpy="0 0 0" xyz="0 0 ${size_z/2}"/>
               <mass value="${mass}"/>
               <inertia ixx="${mass / 12.0 * (3*radius*radius + size_z*size_z)}" ixy="0.0" ixz="0.0" iyy="${mass / 12.0 * (size_z*size_z + 3*radius*radius)}" iyz="0.0" izz="${mass / 2.0 * (radius*radius)}"/>
            </inertial>
         </link>
      </xacro:if>
      <xacro:unless value="${mesh_bool == 0}">
         <link name="${name}">
            <visual>
               <origin rpy="${module['visual']['tf_mesh_1']['roll']} ${module['visual']['tf_mesh_1']['pitch']} ${module['visual']['tf_mesh_1']['yaw']}" xyz="${module['visual']['tf_mesh_1']['x']} ${module['visual']['tf_mesh_1']['y']} ${module['visual']['tf_mesh_1']['z']}"/>
               <geometry>
                  <mesh filename="${module['visual']['mesh_body_1']}" scale="0.001 0.001 0.001"/>
               </geometry>
               <material name="tree_green"/>
            </visual>
            <collision>
               <origin rpy="${module['visual']['tf_mesh_1']['roll']} ${module['visual']['tf_mesh_1']['pitch']} ${module['visual']['tf_mesh_1']['yaw']}" xyz="${module['visual']['tf_mesh_1']['x']} ${module['visual']['tf_mesh_1']['y']} ${module['visual']['tf_mesh_1']['z']}"/>
               <geometry>
                  <mesh filename="${module['visual']['mesh_collision_1']}" scale="0.001 0.001 0.001"/>
               </geometry>
            </collision>
            <inertial>
               <origin rpy="0 0 0" xyz="${module['dynamics']['body_1']['CoM']['x']} ${module['dynamics']['body_1']['CoM']['y']} ${module['dynamics']['body_1']['CoM']['z']}"/>
               <mass value="${module['dynamics']['body_1']['mass']}"/>
               <inertia ixx="${module['dynamics']['body_1']['inertia_tensor']['I_xx']}" ixy="${module['dynamics']['body_1']['inertia_tensor']['I_xy']}" ixz="${module['dynamics']['body_1']['inertia_tensor']['I_xz']}" iyy="${module['dynamics']['body_1']['inertia_tensor']['I_yy']}" iyz="${module['dynamics']['body_1']['inertia_tensor']['I_yz']}" izz="${module['dynamics']['body_1']['inertia_tensor']['I_zz']}"/>
            </inertial>
         </link>
      </xacro:unless>
      <gazebo reference="${name}">
         <mu1>0.2</mu1>
         <mu2>0.2</mu2>
         <kp>1000000.0</kp>
         <kd>1.0</kd>
         <maxVel>0.0</maxVel>
         <minDepth>0.0001</minDepth>
         <material>Gazebo/Blue</material>
      </gazebo>
   </xacro:macro>
   <xacro:macro name="add_fixed_joint" params="type name father child x y z roll pitch yaw">
      <joint name="${name}" type="fixed">
         <axis rpy="0 0 0" xyz="0 0 1"/>
         <parent link="${father}"/>
         <child link="${child}"/>
         <origin rpy="${roll} ${pitch} ${yaw}" xyz="${x} ${y} ${z}"/>
      </joint>
   </xacro:macro>
   <xacro:macro name="add_virtual_ee" params="type name father x y z roll pitch yaw">
      <joint name="virtual_yaw_joint_1" type="revolute">
         <axis rpy="0 0 0" xyz="0 0 1"/>
         <parent link="${father}"/>
         <child link="virtual_yaw_link_1"/>
         <origin rpy="${roll} ${pitch} ${yaw}" xyz="${x} ${y} ${z}"/>
         <limit effort="1000" lower="-1000" upper="1000" velocity="1000"/>
      </joint>
      <link name="virtual_yaw_link_1">
         <visual>
            <geometry>
               <cylinder length="0.1" radius="0.01"/>
            </geometry>
            <material name="blue"/>
         </visual>
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 0.0296308777857"/>
            <mass value="0.5"/>
            <inertia ixx="0.0023807995811" ixy="0.0" ixz="0.0" iyy="0.00184565189114" iyz="0.0" izz="0.00143514768996"/>
         </inertial>
      </link>
      <joint name="virtual_pitch_joint_1" type="revolute">
         <axis rpy="0 0 0" xyz="0 1 0"/>
         <parent link="virtual_yaw_link_1"/>
         <child link="virtual_pitch_link_1"/>
         <origin rpy="0.0 -0.0 0.0" xyz="0.0 0.0 0.0"/>
         <limit effort="1000" lower="-1000" upper="1000" velocity="1000"/>
      </joint>
      <link name="virtual_pitch_link_1">
         <visual>
            <geometry>
               <cylinder length="0.1" radius="0.01"/>
            </geometry>
            <material name="white"/>
         </visual>
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 0.0296308777857"/>
            <mass value="0.5"/>
            <inertia ixx="0.0023807995811" ixy="0.0" ixz="0.0" iyy="0.00184565189114" iyz="0.0" izz="0.00143514768996"/>
         </inertial>
      </link>
      <joint name="virtual_roll_joint_1" type="revolute">
         <axis rpy="0 0 0" xyz="1 0 0"/>
         <parent link="virtual_pitch_link_1"/>
         <child link="virtual_roll_link_1"/>
         <origin rpy="0.0 -0.0 0.0" xyz="0.0 0.0 0.0"/>
         <limit effort="1000" lower="-1000" upper="1000" velocity="1000"/>
      </joint>
      <link name="virtual_roll_link_1">
         <visual>
            <geometry>
               <cylinder length="0.1" radius="0.01"/>
            </geometry>
            <material name="black"/>
         </visual>
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 0.0296308777857"/>
            <mass value="0.5"/>
            <inertia ixx="0.0023807995811" ixy="0.0" ixz="0.0" iyy="0.00184565189114" iyz="0.0" izz="0.00143514768996"/>
         </inertial>
      </link>
      <joint name="virtual_prismatic_joint" type="prismatic">
         <axis rpy="0 0 0" xyz="0 0 1"/>
         <parent link="virtual_roll_link_1"/>
         <child link="virtual_prismatic_link"/>
         <origin rpy="0.0 -0.0 0.0" xyz="0.0 0.0 0.0"/>
         <limit effort="1000" lower="-1000" upper="1000" velocity="1000"/>
      </joint>
      <link name="virtual_prismatic_link">
         <visual>
            <geometry>
               <cylinder length="0.1" radius="0.01"/>
            </geometry>
            <material name="red"/>
         </visual>
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 0.0296308777857"/>
            <mass value="0.5"/>
            <inertia ixx="0.0023807995811" ixy="0.0" ixz="0.0" iyy="0.00184565189114" iyz="0.0" izz="0.00143514768996"/>
         </inertial>
      </link>
      <joint name="virtual_yaw_joint_2" type="revolute">
         <axis rpy="0 0 0" xyz="0 0 1"/>
         <parent link="virtual_prismatic_link"/>
         <child link="virtual_yaw_link_2"/>
         <origin rpy="0.0 -0.0 0.0" xyz="0.0 0.0 0.0"/>
         <limit effort="1000" lower="-1000" upper="1000" velocity="1000"/>
      </joint>
      <link name="virtual_yaw_link_2">
         <visual>
            <geometry>
               <cylinder length="0.1" radius="0.01"/>
            </geometry>
            <material name="gray"/>
         </visual>
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 0.0296308777857"/>
            <mass value="0.5"/>
            <inertia ixx="0.0023807995811" ixy="0.0" ixz="0.0" iyy="0.00184565189114" iyz="0.0" izz="0.00143514768996"/>
         </inertial>
      </link>
      <joint name="virtual_pitch_joint_2" type="revolute">
         <axis rpy="0 0 0" xyz="0 1 0"/>
         <parent link="virtual_yaw_link_2"/>
         <child link="virtual_pitch_link_2"/>
         <origin rpy="0.0 -0.0 0.0" xyz="0.0 0.0 0.0"/>
         <limit effort="1000" lower="-1000" upper="1000" velocity="1000"/>
      </joint>
      <link name="virtual_pitch_link_2">
         <visual>
            <geometry>
               <cylinder length="0.1" radius="0.01"/>
            </geometry>
            <material name="green"/>
         </visual>
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 0.0296308777857"/>
            <mass value="0.5"/>
            <inertia ixx="0.0023807995811" ixy="0.0" ixz="0.0" iyy="0.00184565189114" iyz="0.0" izz="0.00143514768996"/>
         </inertial>
      </link>
      <joint name="virtual_roll_joint_2" type="revolute">
         <axis rpy="0 0 0" xyz="1 0 0"/>
         <parent link="virtual_pitch_link_2"/>
         <child link="virtual_roll_link_2"/>
         <origin rpy="0.0 -0.0 0.0" xyz="0.0 0.0 0.0"/>
         <limit effort="1000" lower="-1000" upper="1000" velocity="1000"/>
      </joint>
      <link name="virtual_roll_link_2">
         <visual>
            <geometry>
               <cylinder length="0.1" radius="0.01"/>
            </geometry>
            <material name="yellow"/>
         </visual>
         <inertial>
            <origin rpy="0 0 0" xyz="0 0 0.0296308777857"/>
            <mass value="0.5"/>
            <inertia ixx="0.0023807995811" ixy="0.0" ixz="0.0" iyy="0.00184565189114" iyz="0.0" izz="0.00143514768996"/>
         </inertial>
      </link>
   </xacro:macro>
   <xacro:add_table father="base_link" name="table" type="link"/>
   <xacro:add_link name="L_0_A" size="3" size_z="0.0" type="link"/>
   <xacro:add_fixed_joint child="L_0_A" father="table" name="L_0_A_fixed_joint_0" pitch="-0.0" roll="0.0" type="fixed_joint" x="0.0" y="0.0" yaw="0.0" z="0.0"/>
   <xacro:add_fixed_joint child="J1_A_stator" father="L_0_A" name="fixed_J1_A" pitch="-0.0" roll="0.0" type="fixed_joint_stator" x="0.0" y="0.0" yaw="0.0" z="0.0"/>
   <xacro:add_joint_stator filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_double_elbow_ORANGE_B.yaml" name="J1_A_stator" size="3" size_y="0.07214997712353187" size_z="0.1320574549721794" type="joint_stator"/>
   <xacro:add_joint child="L_1_A" effort="147" father="J1_A_stator" lower_lim="-2.0" name="J1_A" pitch="-0.0" roll="-1.57" type="joint" upper_lim="2.0" velocity="3.9" x="0.0" y="0.07214997712353187" yaw="0.0" z="0.1320574549721794"/>
   <xacro:add_distal filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_double_elbow_ORANGE_B.yaml" name="L_1_A" type="add_distal"/>
   <xacro:add_fixed_joint child="L_1_A_rotor_fast" father="L_1_A" name="fixed_L_1_A_rotor_fast" pitch="-0.0" roll="0.0" type="fixed_joint" x="0.0" y="0.0" yaw="0.0" z="0.0"/>
   <xacro:add_rotor_fast filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_double_elbow_ORANGE_B.yaml" name="L_1_A_rotor_fast" pitch="-0.0" roll="0.0" type="add_rotor_fast" x="0.0" y="0.0" yaw="0.0" z="0.0"/>
   <xacro:add_fixed_joint child="J2_A_stator" father="L_1_A" name="fixed_J2_A" pitch="-0.0" roll="1.57" type="fixed_joint_stator" x="0.0" y="-0.13199995814700216" yaw="0.0" z="-0.07204488487418322"/>
   <xacro:add_joint_stator filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_double_elbow_ORANGE_B.yaml" name="J2_A_stator" size="3" size_y="0.07214997712353187" size_z="0.1320574549721794" type="joint_stator"/>
   <xacro:add_joint child="L_2_A" effort="147" father="J2_A_stator" lower_lim="-2.0" name="J2_A" pitch="-0.0" roll="-1.57" type="joint" upper_lim="2.0" velocity="3.9" x="0.0" y="0.07214997712353187" yaw="0.0" z="0.1320574549721794"/>
   <xacro:add_distal filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_double_elbow_ORANGE_B.yaml" name="L_2_A" type="add_distal"/>
   <xacro:add_fixed_joint child="L_2_A_rotor_fast" father="L_2_A" name="fixed_L_2_A_rotor_fast" pitch="0" roll="0" type="fixed_joint" x="0" y="0" yaw="0" z="0"/>
   <xacro:add_rotor_fast filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_double_elbow_ORANGE_B.yaml" name="L_2_A_rotor_fast" pitch="0" roll="0" type="add_rotor_fast" x="0" y="0" yaw="0" z="0"/>
   <xacro:add_fixed_joint child="J3_A_stator" father="L_2_A" name="fixed_J3_A" pitch="-0.0" roll="1.57" type="fixed_joint_stator" x="0.0" y="-0.13199995814700216" yaw="0.0" z="-0.07204488487418322"/>
   <xacro:add_joint_stator filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_yaw_ORANGE_B.yaml" name="J3_A_stator" size="3" size_y="0.0" size_z="0.214" type="joint_stator"/>
   <xacro:add_joint child="L_3_A" effort="147" father="J3_A_stator" lower_lim="-2.8" name="J3_A" pitch="-0.0" roll="0.0" type="joint" upper_lim="2.8" velocity="3.9" x="0.0" y="0.0" yaw="0.0" z="0.214"/>
   <xacro:add_distal filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_yaw_ORANGE_B.yaml" name="L_3_A" type="add_distal"/>
   <xacro:add_fixed_joint child="L_3_A_rotor_fast" father="L_3_A" name="fixed_L_3_A_rotor_fast" pitch="0" roll="0" type="fixed_joint" x="0" y="0" yaw="0" z="0"/>
   <xacro:add_rotor_fast filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_yaw_ORANGE_B.yaml" name="L_3_A_rotor_fast" pitch="0" roll="0" type="add_rotor_fast" x="0" y="0" yaw="0" z="0"/>
   <xacro:add_fixed_joint child="J4_A_stator" father="L_3_A" name="fixed_J4_A" pitch="-0.0" roll="0.0" type="fixed_joint_stator" x="0.0" y="0.0" yaw="0.0" z="0.0"/>
   <xacro:add_joint_stator filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_double_elbow_ORANGE_B.yaml" name="J4_A_stator" size="3" size_y="0.07214997712353187" size_z="0.1320574549721794" type="joint_stator"/>
   <xacro:add_joint child="L_4_A" effort="147" father="J4_A_stator" lower_lim="-2.0" name="J4_A" pitch="-0.0" roll="-1.57" type="joint" upper_lim="2.0" velocity="3.9" x="0.0" y="0.07214997712353187" yaw="0.0" z="0.1320574549721794"/>
   <xacro:add_distal filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_double_elbow_ORANGE_B.yaml" name="L_4_A" type="add_distal"/>
   <xacro:add_fixed_joint child="L_4_A_rotor_fast" father="L_4_A" name="fixed_L_4_A_rotor_fast" pitch="0" roll="0" type="fixed_joint" x="0" y="0" yaw="0" z="0"/>
   <xacro:add_rotor_fast filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_double_elbow_ORANGE_B.yaml" name="L_4_A_rotor_fast" pitch="0" roll="0" type="add_rotor_fast" x="0" y="0" yaw="0" z="0"/>
   <xacro:add_simple_ee name="ee_A" size_z="0.189" type="simple_ee"/>
   <xacro:add_fixed_joint child="ee_A" father="L_4_A" name="L_4_fixed_joint_0_A" pitch="-0.0" roll="1.57" type="fixed_joint" x="0.0" y="-0.3209998982211189" yaw="0.0" z="-0.07189437912585463"/>
   <xacro:add_link name="L_0_B" size="3" size_z="0.0" type="link"/>
   <xacro:add_fixed_joint child="L_0_B" father="table" name="L_0_B_fixed_joint_0" pitch="-0.0" roll="0.0" type="fixed_joint" x="0.6" y="0.0" yaw="3.14" z="0.0"/>
   <xacro:add_fixed_joint child="J1_B_stator" father="L_0_B" name="fixed_J1_B" pitch="-0.0" roll="0.0" type="fixed_joint_stator" x="0.0" y="0.0" yaw="0.0" z="0.0"/>
   <xacro:add_joint_stator filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_yaw_ORANGE_B.yaml" name="J1_B_stator" size="3" size_y="0.0" size_z="0.214" type="joint_stator"/>
   <xacro:add_joint child="L_1_B" effort="147" father="J1_B_stator" lower_lim="-2.8" name="J1_B" pitch="-0.0" roll="0.0" type="joint" upper_lim="2.8" velocity="3.9" x="0.0" y="0.0" yaw="0.0" z="0.214"/>
   <xacro:add_distal filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_yaw_ORANGE_B.yaml" name="L_1_B" type="add_distal"/>
   <xacro:add_fixed_joint child="L_1_B_rotor_fast" father="L_1_B" name="fixed_L_1_B_rotor_fast" pitch="-0.0" roll="0.0" type="fixed_joint" x="0.0" y="0.0" yaw="0.0" z="0.0"/>
   <xacro:add_rotor_fast filename="/home/edoardo/MultiDoF-superbuild/external/modular/web/static/yaml/module_joint_yaw_ORANGE_B.yaml" name="L_1_B_rotor_fast" pitch="-0.0" roll="0.0" type="add_rotor_fast" x="0.0" y="0.0" yaw="0.0" z="0.0"/>
   <xacro:add_simple_ee name="ee_B" size_z="0.075" type="simple_ee"/>
   <xacro:add_fixed_joint child="ee_B" father="L_1_B" name="L_1_fixed_joint_0_B" pitch="-0.0" roll="0.0" type="fixed_joint" x="0.0" y="0.0" yaw="0.0" z="0.075"/>
</robot>
